{"version":3,"sources":["api/index.js"],"names":["Api","express","middleware","routes","use","json","urlencoded","extended","blueprintsRouter","path","router"],"mappings":";;;;;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;IAGqBA,G;;AAInB;AACA,iBAAc;AAAA;;AACZ,SAAKC,OAAL,GAAe,wBAAf;AACA,SAAKC,UAAL;AACA,SAAKC,MAAL;AACD;;AAED;;AAVA;;;;;iCAWmB;AACjB,WAAKF,OAAL,CAAaG,GAAb,CAAiB,sBAAO,KAAP,CAAjB;AACA,WAAKH,OAAL,CAAaG,GAAb,CAAiB,qBAAWC,IAAX,EAAjB;AACA,WAAKJ,OAAL,CAAaG,GAAb,CAAiB,qBAAWE,UAAX,CAAsB,EAACC,UAAU,KAAX,EAAtB,CAAjB;AACD;;AAED;;;;6BACe;AACb,UAAMC,mBAAmB,gCAAzB;AACA,WAAKP,OAAL,CAAaG,GAAb,CAAiBI,iBAAiBC,IAAlC,EAAwCD,iBAAiBE,MAAzD;AACD;;;;;;kBAtBkBV,G","file":"index.js","sourcesContent":["// @flow\n\nimport express from 'express';\nimport morgan from 'morgan';\nimport bodyParser from 'body-parser';\nimport BlueprintsRouter from '../routers/BlueprintsRouter';\nimport type {$Request, $Response, express$Application} from 'express';\n\nexport default class Api {\n  // annotate with the express $Application type\n  express: express$Application;\n\n  // create the express instance, attach app-level middleware, attach routers\n  constructor() {\n    this.express = express();\n    this.middleware();\n    this.routes();\n  }\n\n  // register middlewares\n  middleware(): void {\n    this.express.use(morgan('dev'));\n    this.express.use(bodyParser.json());\n    this.express.use(bodyParser.urlencoded({extended: false}));\n  }\n\n  // connect resource routers\n  routes(): void {\n    const blueprintsRouter = new BlueprintsRouter();\n    this.express.use(blueprintsRouter.path, blueprintsRouter.router);\n  }\n}\n"]}